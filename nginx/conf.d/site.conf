# Настройка прослушивания порта 80
server {
    listen 80;
    server_tokens off;  # Отключение отображения информации о сервере
    client_max_body_size 50M;  # Ограничение максимального размера тела запроса

    # Проксируем запросы на приложение на порту 3000
    location / {
        proxy_pass http://site:3000;
        include /etc/nginx/proxy_params;  # Подключаем общие параметры прокси
    }

    # Отключаем логирование для статических файлов
    location ~* \.(png|jpg|jpeg|gif|css|js|ico|xml|txt|woff|woff2|svg|eot|ttf)$ {
        access_log off;
        expires 30d;
    }

    # Перенаправляем запросы с порта 80 на HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# Настройка прослушивания порта 443 с SSL/TLS
server {
    listen 443 ssl;
    server_tokens off;
    client_max_body_size 50M;

    # Указываем SSL сертификат и приватный ключ
    ssl_certificate /path/to/your/certificate.crt;
    ssl_certificate_key /path/to/your/private_key.key;

    # Остальные настройки SSL/TLS
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";

    # Настройка прокси и кэширования
    location / {
        proxy_pass http://site:3000;
        include /etc/nginx/proxy_params;
    }

    # Логирование для статических файлов и сжатие изображений
    location ~* \.(png|jpg|jpeg)$ {
        image_filter on;
        image_filter_quality 75;
        image_filter_buffer 10M;
        image_filter_jpeg_quality 75;
        image_filter_cache off;
        image_filter_max_filesize 10M;
        add_header Content-Disposition "inline; filename=$request_uri";
    }

    # Перенаправление с HTTP на HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}
