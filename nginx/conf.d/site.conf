server {
    listen 80;  # Настройка прослушивания порта 80
    server_tokens off;  # Отключение отображения информации о сервере
    client_max_body_size 50M;  # Ограничение максимального размера тела запроса

    location / {
        proxy_pass http://site:3000;  # Проксируем запросы на приложение на порту 3000
        proxy_set_header Host $host;  # Передаем заголовок Host
        proxy_set_header X-Real-IP $remote_addr;  # Передаем реальный IP адрес клиента
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Передаем заголовок X-Forwarded-For
        proxy_http_version 1.1;  # Указываем версию HTTP протокола
        proxy_set_header Upgrade $http_upgrade;  # Передаем заголовок Upgrade
        proxy_set_header Connection 'upgrade';  # Передаем заголовок Connection
        proxy_cache_bypass $http_upgrade;  # Обход кэша для обновлений
    }


    location /static/ {
        alias /path/to/your/static/files;  # Указываем путь к статическим файлам
        expires 30d;  # Устанавливаем время жизни кэша
        access_log off;  # Отключаем логирование
    }

    location /media/ {
        alias /path/to/your/media/files;  # Указываем путь к медиа файлам
        expires 30d;  # Устанавливаем время жизни кэша
        access_log off;  # Отключаем логирование
    }

    location ~* \.(png|jpg|jpeg)$ {
        # Включаем модуль сжатия изображений
        image_filter on;

        # Устанавливаем качество изображения (от 1 до 100)
        image_filter_quality 75;

        # Устанавливаем размер изображения (ширина x высота)
        image_filter_buffer 10M;

        # Устанавливаем формат изображения (jpeg или png)
        image_filter_jpeg_quality 75;

        # Устанавливаем временное хранилище изображений
        image_filter_cache off;

        # Применяем сжатие только к оригинальному размеру изображения
        image_filter_max_filesize 10M;

        # Устанавливаем заголовок Content-Disposition
        add_header Content-Disposition "inline; filename=$request_uri";
    }

    # Добавление конфигурации для SSL/TLS
    listen 443 ssl;  # Настройка прослушивания порта 443 с SSL/TLS
    ssl_certificate /path/to/your/certificate.crt;  # Путь к SSL сертификату
    ssl_certificate_key /path/to/your/private_key.key;  # Путь к приватному ключу SSL
    ssl_protocols TLSv1.2 TLSv1.3;  # Указываем протоколы SSL/TLS
    ssl_prefer_server_ciphers on;  # Предпочитаем шифры, выбранные сервером
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';  # Устанавливаем список поддерживаемых шифров
    ssl_session_cache shared:SSL:10m;  # Кэш сессий SSL
    ssl_session_timeout 10m;  # Время жизни сессии SSL
    ssl_session_tickets off;  # Отключаем билеты сессии
    ssl_stapling on;  # Включаем заполнение билетов OCSP
    ssl_stapling_verify on;  # Включаем проверку билетов OCSP
    resolver 8.8.8.8 8.8.4.4 valid=300s;  # Устанавливаем DNS-серверы для разрешения имен хостов
    resolver_timeout 5s;  # Устанавливаем таймаут для разрешения DNS
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";  # Устанавливаем заголовок Strict-Transport-Security
    add_header X-Frame-Options DENY;  # Устанавливаем заголовок X-Frame-Options
    add_header X-Content-Type-Options nosniff;  # Устанавливаем заголовок X-Content-Type-Options
    add_header X-XSS-Protection "1; mode=block";  # Устанавливаем заголовок X-XSS-Protection

    # Оптимизация настроек Nginx
    gzip on;  # Включаем сжатие gzip
    gzip_comp_level 5;  # Устанавливаем уровень сжатия
    gzip_min_length 256;  # Устанавливаем минимальный размер файла для сжатия
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;  # Указываем типы файлов для сжатия

    # Балансировка нагрузки
    upstream backend {
        server backend1.example.com;  # Настройка бэкенд серверов
        server backend2.example.com;
    }

    # Перенаправление с HTTP на HTTPS
    server {
        listen 80 default_server;
        return 301 https://$host$request_uri;  # Перенаправляем запросы с порта 80 на HTTPS
    }
}
